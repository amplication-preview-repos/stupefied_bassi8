/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Watch as PrismaWatch } from "@prisma/client";

export class WatchServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.WatchCountArgs, "select">): Promise<number> {
    return this.prisma.watch.count(args);
  }

  async watches(args: Prisma.WatchFindManyArgs): Promise<PrismaWatch[]> {
    return this.prisma.watch.findMany(args);
  }
  async watch(args: Prisma.WatchFindUniqueArgs): Promise<PrismaWatch | null> {
    return this.prisma.watch.findUnique(args);
  }
  async createWatch(args: Prisma.WatchCreateArgs): Promise<PrismaWatch> {
    return this.prisma.watch.create(args);
  }
  async updateWatch(args: Prisma.WatchUpdateArgs): Promise<PrismaWatch> {
    return this.prisma.watch.update(args);
  }
  async deleteWatch(args: Prisma.WatchDeleteArgs): Promise<PrismaWatch> {
    return this.prisma.watch.delete(args);
  }
}
